[{"/Users/ahmadjanov/Downloads/React-todo-list-master/src/reportWebVitals.js":"1","/Users/ahmadjanov/Downloads/React-todo-list-master/src/components/TodoList.js":"2","/Users/ahmadjanov/Downloads/React-todo-list-master/src/modals/EditTask.js":"3","/Users/ahmadjanov/Downloads/React-todo-list-master/src/modals/CreateTask.js":"4","/Users/ahmadjanov/Downloads/React-todo-list-master/src/components/Card.js":"5","/Users/ahmadjanov/Downloads/React-todo-list-master/src/index.js":"6","/Users/ahmadjanov/Downloads/React-todo-list-master/src/App.js":"7"},{"size":362,"mtime":1619253139000,"results":"8","hashOfConfig":"9"},{"size":1775,"mtime":1669209786612,"results":"10","hashOfConfig":"9"},{"size":1801,"mtime":1669209487500,"results":"11","hashOfConfig":"9"},{"size":1825,"mtime":1669471452791,"results":"12","hashOfConfig":"9"},{"size":2586,"mtime":1669479690815,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":1669208960625,"results":"14","hashOfConfig":"9"},{"size":302,"mtime":1619253139000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r1it1n",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ahmadjanov/Downloads/React-todo-list-master/src/reportWebVitals.js",[],"/Users/ahmadjanov/Downloads/React-todo-list-master/src/components/TodoList.js",[],"/Users/ahmadjanov/Downloads/React-todo-list-master/src/modals/EditTask.js",["31"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nconst EditTaskPopup = ({ modal, toggle, updateTask, taskObj }) => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"taskName\") {\n      setTaskName(value);\n    } else {\n      setDescription(value);\n    }\n  };\n\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, []);\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    let tempObj = {};\n    tempObj[\"Name\"] = taskName;\n    tempObj[\"Description\"] = description;\n    updateTask(tempObj);\n    alert(\"Task successfully updated\");\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n      <ModalBody>\n        <div className=\"form-group\">\n          <label>Task Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={taskName}\n            onChange={handleChange}\n            name=\"taskName\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Description</label>\n          <textarea\n            rows=\"5\"\n            className=\"form-control\"\n            value={description}\n            onChange={handleChange}\n            name=\"description\"\n          ></textarea>\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={handleUpdate}>\n          Update\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default EditTaskPopup;\n","/Users/ahmadjanov/Downloads/React-todo-list-master/src/modals/CreateTask.js",["32","33"],"/Users/ahmadjanov/Downloads/React-todo-list-master/src/components/Card.js",["34"],"/Users/ahmadjanov/Downloads/React-todo-list-master/src/index.js",[],"/Users/ahmadjanov/Downloads/React-todo-list-master/src/App.js",["35"],{"ruleId":"36","severity":1,"message":"37","line":21,"column":6,"nodeType":"38","endLine":21,"endColumn":8,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":26},{"ruleId":"40","severity":1,"message":"44","line":1,"column":28,"nodeType":"42","messageId":"43","endLine":1,"endColumn":34},{"ruleId":"36","severity":1,"message":"45","line":16,"column":3,"nodeType":"42","endLine":16,"endColumn":12,"suggestions":"46"},{"ruleId":"40","severity":1,"message":"47","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'taskObj.Description' and 'taskObj.Name'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'taskObj.Name', you can also switch to useReducer instead of useState and read 'taskObj.Name' in the reducer.","ArrayExpression",["48"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","React Hook useEffect contains a call to 'setCheck'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [countdown] as a second argument to the useEffect Hook.",["49"],"'logo' is defined but never used.",{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"Update the dependencies array to be: [taskObj.Description, taskObj.Name]",{"range":"54","text":"55"},"Add dependencies array: [countdown]",{"range":"56","text":"57"},[584,586],"[taskObj.Description, taskObj.Name]",[610,610],", [countdown]"]